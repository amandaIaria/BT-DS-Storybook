// 
// Buttons
// 
// Various button styles.
// 
// Markup: 
//  
// (a new modifiers section)
// :hover - When user hovers over button.
// :focus - When button is focused.
// .btc-button--small - A small button.
// .button--large - A large button.
// 
// Styleguide Components - Atoms - Buttons
// 

.btc-a-button {
  $self: &;
  border: thin solid;
  border-radius: 2px;
  cursor: pointer;
  display: inline-block;
  font-weight: 800;
  position: relative;
  text-decoration: none;
  text-transform: uppercase;
  text-align: center;
  @include transition(background-color $bt-transition);
  @include transition(color $bt-transition);

  &:active {
    top: 4px;
  }
   
  &:focus {
    outline: thin solid $active-color;
    outline-offset: 8px;
  }

  // if we don't need to extend it then use this method and map
  // @include create-classes($buttons, '--', '-');
  // @include create-classes($buttons-sizes, '--', '-');

  &__border {
    border-bottom: 2px solid map-get($map: $colors, $key: 'flatblack');
    display: block;
    height: 1px;
    transform-origin: left center;
    width: 29px;
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
    -webkit-transition: .2s ease-in-out;
    -moz-transition: .2s ease-in-out;
    -o-transition: .2s ease-in-out;
    transition: .2s ease-in-out;

    &--top {
      margin-bottom: 8px;
    }

    &--middle {

    }

    &--bottom {
      margin-top: 8px;
    }
  }

  &__input {
    display: none;
  }

  &__label {
    vertical-align: middle;
    font-size: 16px;
    line-height: 24px;
  }

  &--block {
    padding: 16px;

    &#{$self}--navigation {
      padding-bottom: 20px;

      &:active {
        padding-bottom: 16px;
      }
    }
  }
  
  &--close {
    font-size: $bt-button-password-icon-font-size;
  }

  &--default {
    padding: 6px 24px;
    padding-bottom: 8px;
    width: auto;

    &:active {
      padding-bottom: 6px;
    }
  }

  &--navigation {
    width: 29px;
    box-sizing: content-box;
    background: map-get($map: $colors, $key: 'blue1' );
    border-color: map-get($map: $colors, $key: 'blue1');
    position: fixed;
    right: 0;
    z-index: 9999;
    @include box-shadow(inset 0px -4px 0px 0px map-get($map: $colors, $key: 'blue2'));

    &:active {
      @include box-shadow(inset 0px 0px 0px 0px transparent);

      #{$self}--block {
        padding-bottom: 16px;
      }
    }
  }

  &--open {
    #{$self}__border {
      &--top {
        transform: rotate(40deg) !important;
        width: 35px;
       }
       
       &--middle {
         width: 0;
       }
       
       &--bottom {
        transform: rotate(-40deg) !important;
        width: 35px;
       }
    }
  }
  
  &--remove {
    background: $bt-button-remove-background;
    border-color: $bt-button-remove-border-color;
    color: $bt-button-remove-color;
  }

  &--reset {
    color: $bt-button-reset-color;

    &:hover,
    &:focus,
    &:focus-within {
      color: $bt-button-reset-focus-color;
      background: $bt-button-reset-focus-background;
      border-color: $bt-button-reset-focus-border-color;
    }
  }

  &--primary {
    background: map-get($map: $colors, $key: 'blue2');
    border-color: map-get($map: $colors, $key: 'blue2');
    color: map-get($map: $colors, $key: 'white');
    @include box-shadow(inset 0px -4px 0px 0px map-get($map: $colors, $key: 'blue3'));

    &:active {
      @include box-shadow(0px 0px 0px 0px map-get($map: $colors, $key: 'blue2'));
    }
  }

  &--secondary {
    background: map-get($map: $colors, $key: 'white');
    border: thin solid map-get($map: $colors, $key: 'flatblack');
    color: map-get($map: $colors, $key: 'flatblack');
    @include box-shadow(inset 0px -4px 0px 0px map-get($map: $colors, $key: 'flatblack'));

    // &:hover {
    //   background: map-get($map: $colors, $key: 'flatblack');
    //   color: map-get($map: $colors, $key: 'white');
    // }

    &:active {
      @include box-shadow( 0px 0px 0px 0px map-get($map: $colors, $key: 'flatblack'));
    }
  }

  &--tertiary {
    //
  }
}


